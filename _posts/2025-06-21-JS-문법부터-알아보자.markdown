---
layout: post
title:  "JS 문법부터 알아보자"
date:   2025-06-21 04:04:00 +0900
categories: [CS, 지식]
---

# JS의 기본 문법부터 배우기

어쩌다 코딩 테스트를 준비하게 되었다. 지금까지는 C나 자바로 문제를 풀었지만, 이번엔 JS로 풀어야 한다. 대학교 2학년 때 웹 프로그래밍을 들으며, JS를 접할 기회가 있었다. 크게 관심이 없어서 집중하지 못했고 지금 남는 건 거의 없다.

## 생 기초부터 시작하며 지식 불러오기
JS 관련 기억은 안 써서 휘발되기 직전의 데이터라고 할 수 있다. 한 시간이라도 빨리 많은 양을 때려박으면서 일단 구현을 하는 것에 집중한다.

## 코딩 테스트 화면을 보니... 뭔가 이상한데?
코딩 테스트는 "프로그래머스"에서 실행한다고 하길래, 환경에 익숙해지기 위해 일단 프로그래머스 접속을 했다. 그리고 제일 쉬운 문제를 들어갔다. Java를 사용한다면 바로 풀 수 있는 내용이지만, 언어를 바꾸니 손이 멈췄다. 이게 무슨 의미지?

```js
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = [line];
}).on('close',function(){
    str = input[0];
});
```

## 하나씩 알아보자.
>지금 코딩테스트를 준비하기 위해 자바스크립트 언어로 바꿨는데, 처음부터 이해를 못하겠네. 코드의 각 줄이 의미하는 걸 알려줘.

### 내 든든한 친구 Cursor의 대답
```js
// readline 모듈을 불러옵니다.
// Node.js에 내장된 모듈로, 터미널과 같은 읽기 가능한 스트림에서
// 데이터를 한 줄씩 읽어올 수 있는 기능을 제공합니다.
const readline = require('readline');

// readline 인터페이스 객체를 생성합니다.
// 이 객체를 통해 입출력을 제어할 수 있습니다.
const rl = readline.createInterface({
    // input: process.stdin 은 입력을 표준 입력(키보드)에서 받겠다는 의미입니다.
    input: process.stdin,
    // output: process.stdout 은 출력을 표준 출력(콘솔)으로 하겠다는 의미입니다.
    output: process.stdout
});

// 입력받은 데이터를 저장할 배열을 선언합니다.
let input = [];

// rl.on(...)은 이벤트 리스너입니다. 특정 이벤트가 발생했을 때, 뒤따르는 함수를 실행하죠.
rl.on('line', function (line) {
    // 'line' 이벤트는 사용자가 터미널에 한 줄을 입력하고 Enter 키를 누를 때마다 발생합니다.
    // 이벤트가 발생하면, 입력된 한 줄의 내용(line)을 input 배열에 저장합니다.
    // 현재 코드는 input = [line] 이므로, 여러 줄을 입력받아도 마지막 줄만 저장됩니다.
    // 만약 모든 줄을 저장하고 싶다면 input.push(line)을 사용해야 합니다.
    input = [line];
}).on('close', function () {
    // 'close' 이벤트는 입력이 모두 끝났을 때(Ctrl+D 또는 Ctrl+Z) 발생합니다.
    // 코딩 테스트에서는 보통 모든 입력이 들어온 후 이 부분에서 알고리즘 로직을 처리합니다.
    // input 배열의 첫 번째 요소(입력받은 줄)를 str 변수에 할당합니다.
    str = input[0];

    // 이 아래에 str 변수를 사용하는 로직을 작성하게 됩니다.
    // console.log(str);
});
```

그니까 대충 이해하면
1. 데이터를 읽을 수 있는 객체 생성
2. 데이터를 배열로 저장하기 위해 input 생성
3. 이벤트 리스너를 활용해 줄마다 입력을 저장
4. 입력이 끝나면 데이터들을 활용해서 알고리즘 구현!

그러므로 위 코드에서 str = input[0]뒤에 알고리즘을 구현하면 된다!
라고 이해했다.

## 이제 문제를 풀어보자
>문제 설명 : 문자열 str이 주어질 때, str을 출력하는 코드를 작성해 보세요.

1. 한 줄을 입력 받는다.
2. 출력 함수를 통해 출력한다.

일단 입력은 어떻게 하는 지 알았으므로, 출력 방법만 알면 된다.
아마 console.log를 사용해서 출력하는 것으로 알고 있다.

```js
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = [line];
}).on('close',function(){
    str = input[0];
    
    console.log(str);
});
```

이렇게 했더니...

## 첫 문제 해결
야호! JS로 처음 문제를 해결했다.
![JS로 첫 문제 해결](/assets/img/image/2025-06-21_JS문법부터알아보자1.png)

이렇게 모르는 걸 하나씩 배워가면서 문제를 풀면 될 것 같다.